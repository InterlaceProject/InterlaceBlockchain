namespace net.sardex.interlace

/////////////////////////////////////////////////////////////////////
// PARTICIPANTS
/////////////////////////////////////////////////////////////////////
abstract participant Member identified by memberID {
  o String memberID
  o String[] email // e-mail
  o String[] phone // telephone number
  o Double availableCapacity // Disponibilit commerciale residua
  o GroupType activeGroup // set current group membership type
}

participant Subscriber extends Member {
  o String entityName // Nome della societ
  o String entityAddress // Indirizzo della societ
  /* //temporarily commented to simplify chain-init process
  o String[] GPS // Coordinate GPS
  o String VAT // Numero IVA
  o String firstName optional // Nome
  o String surName optional // Cognome
  o Double capacity optional // Disponibilit commerciale
  o DateTime capacityDate optional // Data  Disponibilit commerciale
  o Double rewardRate optional // rate of reward to consumer in SRD
  o Double[] euroFee optional // fee on B2C EUR sales in EUR
  o Double acceptanceRate optional // Rate of SRD acceptance in consumer purchases
  o Double creditPercent optional // SRD acceptance for transactions above 1000
  */
}

participant Individual extends Member {
  o String firstName optional // Nome
  o String surName optional // Cognome
  o String employedBy optional // Datore di lavoro
}

/////////////////////////////////////////////////////////////////////
// TRANSACTIONS
/////////////////////////////////////////////////////////////////////
abstract transaction Transfer {
  o Double amount
  // NB: avvertire l'utente che non possiamo mettere memo causa GDPR
  --> Account senderAccount
  --> Account recipientAccount
}

transaction CreditTransfer extends Transfer {}
//info for debit transfer
//      fromAccount=debitor=buyer
//      toAccount=creditor=seller
transaction DebitTransfer extends Transfer {}

@returns(AcknowledgeStatus)
transaction DebitTransferAcknowledge {
  --> PendingTransfer transfer
  //add user signature for production
}

//transaction initalizing the chain
transaction InitBlockchain {}

transaction CleanupPendingTransfers {}

/////////////////////////////////////////////////////////////////////
// ENUMS !! should be in synch with enum.js !!
/////////////////////////////////////////////////////////////////////
enum Unit {
  o Euro
  o SRD
}

enum Operation {
  o credit
  o debit
}

enum GroupType {
  o welcome
  o retail
  o company
  o full
  o employee
  o on_hold
  o MNGR
  o consumer
  o consumer_verified
}

enum AccountType {
  o CC
  o DOMU
  o MIRROR
  o Income
  o Prepaid
  o Bisoo
  o Topup
}

enum TransactionStatus {
  o Pending
  o Performed
  o Rejected
  o Expired
}
/////////////////////////////////////////////////////////////////////
// ASSETS
/////////////////////////////////////////////////////////////////////
abstract asset Account identified by accountID {
  o String accountID
  o Unit unit
  o Double balance
  --> Member member
}

abstract asset MemberAccount extends Account {}

asset SysAccount extends Account {}

asset CCAccount extends MemberAccount {
  o Double creditLimit
  o DateTime creditLimitDate
  o Double upperLimit
  o Double capacity
}

asset PendingTransfer identified by otp {
  o String otp
  o DateTime created
  o DateTime expires
  o String rejectionReason optional
  o DebitTransfer transfer
  o TransactionStatus state
}

/////////////////////////////////////////////////////////////////////
// concepts
/////////////////////////////////////////////////////////////////////

concept AcknowledgeStatus {
  o TransactionStatus status
  o String description
}

/////////////////////////////////////////////////////////////////////
// events need to be picked up by middleware and delivered to
// the right destination
/////////////////////////////////////////////////////////////////////
event LimitAlert {
  o String alertText
  --> Account account
}
event RequestDebitAcknowledge {
  o String otp
  --> Account debitorAccount
}
event DebitAcknowledgeInvalid { //TODO
  o PendingTransfer pendingTransfer
  o String message
}
